name: Build and deploy master

on: [push]

env:
    IMAGE: docker.pkg.github.com/${{ github.repository }}/kontakt-oss:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - uses: actions/cache@v1
        with:
          path: ./node_modules
          key: ${{ runner.os }}-node-cache-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-cache-
      - name: Install dependencies
        run: |
          yarn install --frozen-lockfile
      - name: Run tests
        run: |
          yarn test
      - name: Run e2e-tests
        run: |
          yarn test:e2e

  build:
    name: Build
    needs: test
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/arbeidsgiver_namespace'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
            node-version: '12.x'
      - uses: actions/cache@v1
        with:
            path: ./node_modules
            key: ${{ runner.os }}-node-cache-${{ hashFiles('yarn.lock') }}
            restore-keys: |
                ${{ runner.os }}-node-cache-
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            yarn install --frozen-lockfile
            yarn run build
            docker build . -t ${IMAGE}
            echo ${GITHUB_TOKEN} | docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} --password-stdin
            docker push ${IMAGE}

  deploy-to-dev:
      name: Deploy to dev-gcp
      needs: build
      runs-on: ubuntu-20.04
      steps:
          - uses: actions/checkout@v1
          - uses: nais/deploy/actions/deploy@v1
            env:
                APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                CLUSTER: dev-gcp
                RESOURCE: nais/application.yaml
                VARS: nais/dev.yaml
                PRINT_PAYLOAD: true

  deploy-to-prod:
      name: Deploy to prod-gcp
      if: github.ref == 'refs/heads/master'
      needs: deploy-to-dev
      runs-on: ubuntu-20.04
      steps:
          - uses: actions/checkout@v1
          - uses: nais/deploy/actions/deploy@v1
            env:
                APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                CLUSTER: prod-gcp
                RESOURCE: nais/application.yaml
                VARS: nais/prod.yaml
                PRINT_PAYLOAD: true
